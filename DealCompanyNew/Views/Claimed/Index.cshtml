@*@model IEnumerable<DealCompanyNew.ClaimedDeal>*@
@model PagedList.IPagedList<DealCompanyNew.ClaimedDeal>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm())
{
    <p>
        Search User Name Or User ID: @Html.TextBox("Search_Data", ViewBag.FilterValue as string)
        <input type="submit" value="Find" />
    </p>
}


<table class="table table-responsive table-bordered table-striped table-hover">
    <tr>
        <th>
            @Html.DisplayName("ServerDateTime")
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.DateTime_UTC)*@
            @Html.ActionLink("DateTime UTC", "Index", new { Sorting_Order = ViewBag.DateTime_UTC })
        </th>
        <th>
            @Html.DisplayName("Amount")
        </th>
        <th>
            @Html.DisplayName("Currency")
        </th>
        <th>
            @Html.DisplayName("Deal Name")
        </th>
        <th>
            @Html.ActionLink("User Name", "Index", new { Sorting_Order = ViewBag.Name })

        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Server_DateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateTime_UTC)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Currency)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Deal.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.Name)
            </td>
            @*<td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>*@
        </tr>
    }

</table>

    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, Page_No => Url.Action("Index",
        new { Page_No, Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue }))
